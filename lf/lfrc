# lf doc - https://godoc.org/github.com/gokcehan/lf
# lfrc example - https://github.com/gokcehan/lf/blob/master/etc/lfrc.example

# ========== General settings ==========

set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons

set incsearch
set smartcase
set ignorecase
set anchorfind
set findlen 1
set tabstop 4
set info 'size'
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner
set preview
# set nopreviewcache

# ========== Commands ==========

cmd open ${{
    case $(file --mime-type $f -b) in
        text/*|application/json|application/octet-stream) $EDITOR $fx;;
        *) for f in $fx; do open $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd chmod ${{
  printf "\nMode Bits: "
  read ans
  for file in "$fx"
  do
    chmod $ans $file
  done
  lf -remote 'send reload'
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.tar) tar xvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
        *) echo "Unsupported format";;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd delete ${{
  set -f
  printf "\n$fx\n"
  printf "delete?[y/N]"
  read ans
  [ $ans = "y" ] && rm -rf $fx
}}

cmd trash ${{
  set -f
  printf "\n$fx\n"
  printf "trash?[y/N]"
  read ans
  [ $ans = "y" ] && trash -Fv $fx
}}

cmd select-all :unselect; invert

# ========== Mappings ==========

# Remove some defaults
map gh
map d

map <enter> shell
map DD delete
map T trash
map U !printf "\n";du -csh * # list the size of each item in the current directory
map <c-f> $lf -remote "send $id select '$(fd --hidden --follow --exclude .git --exclude .DS_Store | fzf)'" # search a file or directory and then make lf select it
map <c-n> push :mkdir<space> # give a name and then make a directory
map x cut
map V push :!nvim<space> # give a name and then use neovim to edit it

# Navigate among the parent directories
map [ push hkl
map ] push hjl

# Rename
map A rename # at the very end
map I push A<c-a> # at the very beginning
map r push A<c-u> # new rename

# Use \ as the leader key
map \\. set hidden! # toggle hidden
map \\c push :zip<space> # compress (give a name like abc and it will compress the selected items to abc.zip)
map \\x extract # extract

# Fast navigation
map Jh cd ~
map Jd cd ~/Documents
map JD cd ~/Downloads
map JB cd ~/Dropbox
map Jg cd ~/gitrepos
map Jp cd ~/projects
map Jl cd ~/oj/leetcode
map J. cd ~/.config
map Jv cd ~/.config/nvim
map Jz cd ~/.config/zsh
